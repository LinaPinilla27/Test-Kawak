{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Fullcalendar = _resolveComponent(\"Fullcalendar\");\n  const _component_modals_container = _resolveComponent(\"modals-container\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.newEvent && $options.newEvent(...args))\n  }, \"New event\"), _createVNode(_component_Fullcalendar, {\n    plugins: _ctx.calendarPlugins,\n    header: {\n      left: 'title',\n      center: 'dayGridMonth, timeGridWeek, timeGridDay, listWeek',\n      right: 'prev today next'\n    },\n    buttonText: {\n      today: 'Aujourd\\'hui',\n      month: 'Mois',\n      week: 'Semaine',\n      day: 'Jour',\n      list: 'Liste'\n    },\n    weekends: false,\n    selectable: true,\n    editable: true,\n    events: _ctx.EVENTS,\n    onSelect: $options.handleSelect,\n    onEventClick: $options.handleEventClick,\n    onEventResize: $options.updateEvent,\n    onEventDrop: $options.updateEvent,\n    onEventRender: $options.renderEvent\n  }, null, 8 /* PROPS */, [\"plugins\", \"events\", \"onSelect\", \"onEventClick\", \"onEventResize\", \"onEventDrop\", \"onEventRender\"]), _createVNode(_component_modals_container)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onClick","_cache","args","$options","newEvent","_createVNode","_component_Fullcalendar","plugins","_ctx","calendarPlugins","header","buttonText","weekends","selectable","editable","events","EVENTS","onSelect","handleSelect","onEventClick","handleEventClick","onEventResize","updateEvent","onEventDrop","onEventRender","renderEvent","_component_modals_container"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/components/Calendario.vue"],"sourcesContent":["<template>\n    <div>\n        <button @click=\"newEvent\">New event</button>\n        <Fullcalendar \n            :plugins=\"calendarPlugins\" \n            :header=\"{\n                left: 'title',\n                center: 'dayGridMonth, timeGridWeek, timeGridDay, listWeek',\n                right: 'prev today next'\n            }\"\n            :buttonText=\"{\n                today: 'Aujourd\\'hui',\n                month: 'Mois',\n                week: 'Semaine',\n                day: 'Jour',\n                list: 'Liste'\n            }\"\n            :weekends=\"false\"\n            :selectable=\"true\"\n            :editable=\"true\"\n            :events=\"EVENTS\"\n            @select=\"handleSelect\"\n            @eventClick=\"handleEventClick\"\n            @eventResize=\"updateEvent\"\n            @eventDrop=\"updateEvent\"\n            @eventRender=\"renderEvent\"\n        />\n\n        <modals-container />\n    </div>\n</template>\n\n<script>\n\nrequire('@fullcalendar/core/main.min.css')\nrequire('@fullcalendar/daygrid/main.min.css')\nrequire('@fullcalendar/timegrid/main.min.css')\n\nimport Fullcalendar from '@fullcalendar/vue3'\nimport DayGridPlugin from '@fullcalendar/daygrid'\nimport TimeGridPlugin from '@fullcalendar/timegrid'\nimport InteractionPlugin from '@fullcalendar/interaction'\nimport ListPlugin from '@fullcalendar/list'\n\nimport {mapGetters} from 'vuex'\n\nimport EventModal from './EventModal'\nimport CommentsModal from './CommentsModal'\nimport Modal from './Modal'\n\nexport default {\n    data: () => ({\n        calendarPlugins: [\n            DayGridPlugin,\n            TimeGridPlugin,\n            InteractionPlugin,\n            ListPlugin\n        ]\n    }),\n    components: {Fullcalendar},\n    computed: {\n        ...mapGetters([\"EVENTS\"])\n    },\n    methods: {\n        newEvent() {\n            this.$modal.show(Modal, {\n                text: \"TExt\", \n            })\n            \n        },\n        renderEvent(arg) {\n            let span = document.createElement('span')\n\n            span.setAttribute('class', 'fa fa-comments')\n\n            arg.el.appendChild(span)\n\n            span.addEventListener('click', event => {\n                event.stopPropagation(); \n                this.$modal.show(CommentsModal, {\n                    text: \"This is for the comments\"\n                })\n            })\n        },\n        updateEvent (arg) {\n            this.$store.commit(\"UPDATE_EVENT\", arg.event)\n        },\n        handleSelect(arg) {\n            this.$store.commit(\"ADD_EVENT\", {\n                id: (new Date()).getTime(),\n                title: \"Something\",\n                start: arg.start,\n                end: arg.end,\n                allDay: arg.allDay\n            })\n        },\n        handleEventClick (arg) {\n            console.log(arg)\n            this.$modal.show(EventModal, {\n                text: \"This is from the component\",\n                event: arg.event\n            })\n        }\n    }\n};\n\n</script>\n\n<style>\n\n</style>"],"mappings":";;;;uBACIA,mBAAA,CA4BM,cA3BFC,mBAAA,CAA4C;IAAnCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;KAAE,WAAS,GACnCG,YAAA,CAuBEC,uBAAA;IAtBGC,OAAO,EAAEC,IAAA,CAAAC,eAAe;IACxBC,MAAM,EAAE;;;;KAIR;IACAC,UAAU,EAAE;;;;;;KAMZ;IACAC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,IAAI;IAChBC,QAAQ,EAAE,IAAI;IACdC,MAAM,EAAEP,IAAA,CAAAQ,MAAM;IACdC,QAAM,EAAEd,QAAA,CAAAe,YAAY;IACpBC,YAAU,EAAEhB,QAAA,CAAAiB,gBAAgB;IAC5BC,aAAW,EAAElB,QAAA,CAAAmB,WAAW;IACxBC,WAAS,EAAEpB,QAAA,CAAAmB,WAAW;IACtBE,aAAW,EAAErB,QAAA,CAAAsB;+HAGlBpB,YAAA,CAAoBqB,2BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}