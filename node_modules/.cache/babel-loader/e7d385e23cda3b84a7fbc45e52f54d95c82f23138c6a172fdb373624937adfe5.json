{"ast":null,"code":"import { defineComponent } from 'vue';\nimport { mapGetters, mapActions } from 'vuex';\nexport default defineComponent({\n  data() {\n    return {\n      searchTerm: '' // Nuevo dato para almacenar el término de búsqueda\n    };\n  },\n  computed: {\n    ...mapGetters(['events']),\n    // Filtrar eventos por nombre\n    filteredEvents() {\n      return this.events.filter(event => event.title.toLowerCase().includes(this.searchTerm.toLowerCase()));\n    }\n  },\n  methods: {\n    ...mapActions(['removeEvent'])\n  }\n});","map":{"version":3,"names":["defineComponent","mapGetters","mapActions","data","searchTerm","computed","filteredEvents","events","filter","event","title","toLowerCase","includes","methods"],"sources":["/Users/lina/Desktop/prueba/Test-Kawak/src/components/ListaNotas.vue"],"sourcesContent":["<template>\n  <div>\n    <h2 class=\"my-4\">Lista de Eventos</h2>\n    \n    <!-- Agregar campo de búsqueda -->\n    <div class=\"mb-3\">\n      <label for=\"searchInput\" class=\"form-label\">Buscar por nombre:</label>\n      <input type=\"text\" v-model=\"searchTerm\" class=\"form-control\" id=\"searchInput\">\n    </div>\n\n    <table class=\"table\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th>ID</th>\n          <th>Título</th>\n          <th>Fecha de inicio</th>\n          <th>Fecha de fin</th>\n          <th>Acciones</th>\n        </tr>\n      </thead>\n      <tbody>\n        <!-- Filtrar eventos por nombre -->\n        <tr v-for=\"event in filteredEvents\" :key=\"event.id\">\n          <td>{{ event.id }}</td>\n          <td>{{ event.title }}</td>\n          <td>{{ event.start }}</td>\n          <td>{{ event.end }}</td>\n          <td>\n            <button @click=\"removeEvent(event.id)\" class=\"btn btn-danger\">Eliminar</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default defineComponent({\n  data() {\n    return {\n      searchTerm: '', // Nuevo dato para almacenar el término de búsqueda\n    };\n  },\n  computed: {\n    ...mapGetters(['events']),\n    // Filtrar eventos por nombre\n    filteredEvents() {\n      return this.events.filter(event =>\n        event.title.toLowerCase().includes(this.searchTerm.toLowerCase())\n      );\n    },\n  },\n  methods: {\n    ...mapActions(['removeEvent']),\n  },\n});\n</script>\n"],"mappings":"AAqCA,SAASA,eAAc,QAAS,KAAK;AACrC,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAeF,eAAe,CAAC;EAC7BG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGJ,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC;IACzB;IACAK,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAI,IAC5BA,KAAK,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACR,UAAU,CAACO,WAAW,CAAC,CAAC,CAClE,CAAC;IACH;EACF,CAAC;EACDE,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,CAAC,aAAa,CAAC;EAC/B;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}