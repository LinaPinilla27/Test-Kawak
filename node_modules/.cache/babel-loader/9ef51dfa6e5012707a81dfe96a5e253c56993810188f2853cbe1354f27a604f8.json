{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"demo-app\"\n};\nconst _hoisted_2 = {\n  class: \"demo-app-main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_FullCalendar, {\n    class: \"demo-app-calendar\",\n    options: _ctx.calendarOptions\n  }, {\n    eventContent: _withCtx(arg => [_createElementVNode(\"b\", null, _toDisplayString(arg.timeText), 1 /* TEXT */), _createElementVNode(\"i\", null, _toDisplayString(arg.event.title), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"options\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_FullCalendar","options","_ctx","calendarOptions","eventContent","_withCtx","arg","_toDisplayString","timeText","event","title"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/components/Calendario.vue"],"sourcesContent":["<!-- TuComponente.vue -->\n<template>\n  <div class=\"demo-app\">\n    <div class=\"demo-app-main\">\n      <FullCalendar\n        class=\"demo-app-calendar\"\n        :options=\"calendarOptions\"\n      >\n        <template v-slot:eventContent=\"arg\">\n          <b>{{ arg.timeText }}</b>\n          <i>{{ arg.event.title }}</i>\n        </template>\n      </FullCalendar>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\nimport FullCalendar from '@fullcalendar/vue3';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { createEventId } from './event-utils';\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default defineComponent({\n  components: {\n    FullCalendar,\n  },\n  computed: {\n    ...mapGetters(['getEvents']),\n  },\n  methods: {\n    ...mapActions(['addEvent', 'removeEvent']),\n    handleDateSelect(selectInfo) {\n      let title = prompt('Adicionar nota');\n      if (title) {\n        const event = {\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay,\n        };\n        this.addEvent(event);\n      }\n    },\n    handleEventClick(clickInfo) {\n      if (confirm(`Quieres eliminar la nota '${clickInfo.event.title}'`)) {\n        this.removeEvent(clickInfo.event.id);\n      }\n    },\n    handleEvents(events) {\n      // Handle events if needed\n    },\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin,\n        ],\n        // ... otras opciones ...\n        events: this.getEvents,\n        /* otras opciones ... */\n      },\n    };\n  },\n});\n</script>\n"],"mappings":";;EAEOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAe;;;uBAD5BC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,mBAAA,CAUM,OAVNC,UAUM,GATJC,YAAA,CAQeC,uBAAA;IAPbN,KAAK,EAAC,mBAAmB;IACxBO,OAAO,EAAEC,IAAA,CAAAC;;IAEOC,YAAY,EAAAC,QAAA,CAAEC,GAAG,KAChCT,mBAAA,CAAyB,WAAAU,gBAAA,CAAnBD,GAAG,CAACE,QAAQ,kBAClBX,mBAAA,CAA4B,WAAAU,gBAAA,CAAtBD,GAAG,CAACG,KAAK,CAACC,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}