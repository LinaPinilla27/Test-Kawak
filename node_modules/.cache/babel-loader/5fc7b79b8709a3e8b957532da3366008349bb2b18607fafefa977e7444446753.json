{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// store.js\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    sidebarOpen: false,\n    events: []\n  },\n  getters: {\n    // Define el getter events aquí\n    events: state => state.events\n  },\n  mutations: {\n    toggleSidebar(state) {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    addEvent(state, event) {\n      state.events.push(event);\n    },\n    removeEvent(state, eventId) {\n      state.events = state.events.filter(event => event.id !== eventId);\n    },\n    updateEvent(state, updatedEvent) {\n      const index = state.events.findIndex(event => event.id === updatedEvent.id);\n      if (index !== -1) {\n        state.events.splice(index, 1, updatedEvent);\n      }\n    }\n  },\n  actions: {\n    async toggleSidebarAsync({\n      commit\n    }) {\n      // Puedes realizar operaciones asíncronas aquí si es necesario\n      commit('toggleSidebar');\n    },\n    addEvent({\n      commit\n    }, event) {\n      commit('addEvent', event);\n    },\n    removeEvent({\n      commit\n    }, eventId) {\n      commit('removeEvent', eventId);\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","sidebarOpen","events","getters","mutations","toggleSidebar","addEvent","event","push","removeEvent","eventId","filter","id","updateEvent","updatedEvent","index","findIndex","splice","actions","toggleSidebarAsync","commit","modules"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/store/index.js"],"sourcesContent":["// store.js\nimport { createStore } from 'vuex';\n\nexport default createStore({\n  state: {\n    sidebarOpen: false,\n    events: [],\n  },\n  getters: {\n    // Define el getter events aquí\n    events: state => state.events,\n  },\n  mutations: {\n    toggleSidebar(state) {\n      state.sidebarOpen = !state.sidebarOpen;\n    },\n    addEvent(state, event) {\n      state.events.push(event);\n    },\n    removeEvent(state, eventId) {\n      state.events = state.events.filter(event => event.id !== eventId);\n    },\n    updateEvent(state, updatedEvent) {\n      const index = state.events.findIndex(event => event.id === updatedEvent.id);\n      if (index !== -1) {\n        state.events.splice(index, 1, updatedEvent);\n      }\n    },\n  },\n  actions: {\n    async toggleSidebarAsync({ commit }) {\n      // Puedes realizar operaciones asíncronas aquí si es necesario\n      commit('toggleSidebar');\n    },\n    addEvent({ commit }, event) {\n      commit('addEvent', event);\n    },\n    removeEvent({ commit }, eventId) {\n      commit('removeEvent', eventId);\n    }\n  },\n  modules: {\n  }\n});"],"mappings":";AAAA;AACA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,WAAW,EAAE,KAAK;IAClBC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACP;IACAD,MAAM,EAAEF,KAAK,IAAIA,KAAK,CAACE;EACzB,CAAC;EACDE,SAAS,EAAE;IACTC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACC,WAAW,GAAG,CAACD,KAAK,CAACC,WAAW;IACxC,CAAC;IACDK,QAAQA,CAACN,KAAK,EAAEO,KAAK,EAAE;MACrBP,KAAK,CAACE,MAAM,CAACM,IAAI,CAACD,KAAK,CAAC;IAC1B,CAAC;IACDE,WAAWA,CAACT,KAAK,EAAEU,OAAO,EAAE;MAC1BV,KAAK,CAACE,MAAM,GAAGF,KAAK,CAACE,MAAM,CAACS,MAAM,CAACJ,KAAK,IAAIA,KAAK,CAACK,EAAE,KAAKF,OAAO,CAAC;IACnE,CAAC;IACDG,WAAWA,CAACb,KAAK,EAAEc,YAAY,EAAE;MAC/B,MAAMC,KAAK,GAAGf,KAAK,CAACE,MAAM,CAACc,SAAS,CAACT,KAAK,IAAIA,KAAK,CAACK,EAAE,KAAKE,YAAY,CAACF,EAAE,CAAC;MAC3E,IAAIG,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBf,KAAK,CAACE,MAAM,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,YAAY,CAAC;MAC7C;IACF;EACF,CAAC;EACDI,OAAO,EAAE;IACP,MAAMC,kBAAkBA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACnC;MACAA,MAAM,CAAC,eAAe,CAAC;IACzB,CAAC;IACDd,QAAQA,CAAC;MAAEc;IAAO,CAAC,EAAEb,KAAK,EAAE;MAC1Ba,MAAM,CAAC,UAAU,EAAEb,KAAK,CAAC;IAC3B,CAAC;IACDE,WAAWA,CAAC;MAAEW;IAAO,CAAC,EAAEV,OAAO,EAAE;MAC/BU,MAAM,CAAC,aAAa,EAAEV,OAAO,CAAC;IAChC;EACF,CAAC;EACDW,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}