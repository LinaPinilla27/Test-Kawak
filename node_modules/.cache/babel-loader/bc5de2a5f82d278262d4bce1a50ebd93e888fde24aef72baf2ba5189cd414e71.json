{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"demo-app\"\n};\nconst _hoisted_2 = {\n  class: \"demo-app-main\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"country\"\n}, \"Selecciona un país:\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FullCalendar = _resolveComponent(\"FullCalendar\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectedCountry = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.fetchHolidays && _ctx.fetchHolidays(...args))\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.countries, country => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: country,\n      value: country\n    }, _toDisplayString(country), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, _ctx.selectedCountry]]), _createVNode(_component_FullCalendar, {\n    class: \"demo-app-calendar\",\n    options: _ctx.calendarOptions\n  }, null, 8 /* PROPS */, [\"options\"])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_ctx","selectedCountry","$event","onChange","_cache","args","fetchHolidays","_Fragment","_renderList","countries","country","key","value","_hoisted_4","_createVNode","_component_FullCalendar","options","calendarOptions"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/components/Calendario.vue"],"sourcesContent":["<template>\n  <div class=\"demo-app\">\n    <div class=\"demo-app-main\">\n      <label for=\"country\">Selecciona un país:</label>\n      <select v-model=\"selectedCountry\" @change=\"fetchHolidays\">\n        <option v-for=\"country in countries\" :key=\"country\" :value=\"country\">\n          {{ country }}\n        </option>\n      </select>\n\n      <FullCalendar class=\"demo-app-calendar\" :options=\"calendarOptions\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { defineComponent } from \"vue\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default defineComponent({\n  components: {\n    FullCalendar,\n  },\n  computed: {\n    ...mapGetters([\"events\"]),\n  },\n  data() {\n    return {\n      selectedCountry: \"US\", // Establece un país predeterminado\n      countries: [\"US\", \"GB\", \"CA\", \"AU\", \"DE\"], // Agrega más países según sea necesario\n      holidays: [], // Almacena los días feriados\n      calendarOptions: {\n        plugins: [dayGridPlugin],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        },\n        events: this.holidays,\n      },\n    };\n  },\n  methods: {\n    ...mapActions([\"addEvent\", \"removeEvent\", \"updateEvent\"]),\n    handleDateSelect(selectInfo) {\n      const title = prompt(\"Adicionar nota\");\n      if (title) {\n        const event = {\n          id: this.$store.state.eventIdCounter + 1,\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay,\n        };\n        this.addEvent(event);\n      }\n    },\n    handleEventClick(clickInfo) {\n      const title = prompt(\"Editar nota\", clickInfo.event.title);\n\n      // Verifica si title no es null antes de continuar\n      if (title !== null) {\n        const updatedEvent = {\n          id: clickInfo.event.id,\n          title,\n          start: clickInfo.event.start.toISOString(),\n          end: clickInfo.event.end ? clickInfo.event.end.toISOString() : null,\n          allDay: clickInfo.event.allDay,\n        };\n\n        this.updateEvent(updatedEvent);\n      }\n    },\n    async fetchHolidays() {\n      try {\n        const response = await axios.get(\n          `https://date.nager.at/api/v3/PublicHolidays/${new Date().getFullYear()}/${\n            this.selectedCountry\n          }`\n        );\n        this.holidays = response.data.map((holiday) => ({\n          title: holiday.name,\n          start: holiday.date,\n          allDay: true,\n        }));\n      } catch (error) {\n        console.error(\"Error al obtener los días feriados\", error);\n      }\n    },\n  },\n  watch: {\n    events: {\n      handler(events) {\n        this.calendarOptions.events = events;\n      },\n      immediate: true,\n      selectedCountry: \"fetchHolidays\",\n    },\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        },\n        initialView: \"dayGridMonth\",\n        events: this.events,\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n      },\n    };\n  },\n});\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAe;gCACxBC,mBAAA,CAAgD;EAAzCC,GAAG,EAAC;AAAS,GAAC,qBAAmB;;;;uBAF5CC,mBAAA,CAWM,OAXNC,UAWM,GAVJH,mBAAA,CASM,OATNI,UASM,GARJC,UAAgD,E,gBAChDL,mBAAA,CAIS;+DAJQM,IAAA,CAAAC,eAAe,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEL,IAAA,CAAAM,aAAA,IAAAN,IAAA,CAAAM,aAAA,IAAAD,IAAA,CAAa;yBACtDT,mBAAA,CAESW,SAAA,QAAAC,WAAA,CAFiBR,IAAA,CAAAS,SAAS,EAApBC,OAAO;yBAAtBd,mBAAA,CAES;MAF6Be,GAAG,EAAED,OAAO;MAAGE,KAAK,EAAEF;wBACvDA,OAAO,wBAAAG,UAAA;2FAFGb,IAAA,CAAAC,eAAe,E,GAMhCa,YAAA,CAAqEC,uBAAA;IAAvDtB,KAAK,EAAC,mBAAmB;IAAEuB,OAAO,EAAEhB,IAAA,CAAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}