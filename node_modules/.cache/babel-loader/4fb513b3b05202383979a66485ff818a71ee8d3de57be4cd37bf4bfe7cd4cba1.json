{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Title\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Start\")])], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_ctx.events.length > 0 ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredEvents, (event, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(event.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(event.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(event.start), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"No hay notas disponibles.\"))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_ctx","events","length","_hoisted_1","_hoisted_2","_Fragment","_renderList","filteredEvents","event","index","key","_toDisplayString","id","title","start","_hoisted_3"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/components/ListaNotas.vue"],"sourcesContent":["<template>\n  <div>\n    <template v-if=\"events.length > 0\">\n      <table class=\"table\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Start</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(event, index) in filteredEvents\" :key=\"index\">\n            <td>{{ event.id }}</td>\n            <td>{{ event.title }}</td>\n            <td>{{ event.start }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </template>\n    <template v-else>\n      <p>No hay notas disponibles.</p>\n    </template>\n  </div>\n</template>\n\n<script>\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { defineComponent } from 'vue';\nimport { mapGetters, mapActions } from 'vuex';\n\nexport default defineComponent({\n  computed: {\n    ...mapGetters(['events']),\n    filteredEvents() {\n      // Aquí puedes aplicar cualquier lógica de filtrado necesario\n      // En este ejemplo, devolvemos todos los eventos sin filtro\n      return this.events;\n    },\n  },\n  methods: {\n    ...mapActions(['removeEvent']),\n  },\n});\n</script>"],"mappings":";;;EAGaA,KAAK,EAAC;;gCACXC,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAc,YAAV,OAAK,E;;;;;uBAPnBC,mBAAA,CAsBM,cArBYC,IAAA,CAAAC,MAAM,CAACC,MAAM,Q,cAC3BH,mBAAA,CAeQ,SAfRI,UAeQ,GAdNC,UAMQ,EACRN,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKM,SAAA,QAAAC,WAAA,CAJwBN,IAAA,CAAAO,cAAc,GAA/BC,KAAK,EAAEC,KAAK;yBAAxBV,mBAAA,CAIK;MAJyCW,GAAG,EAAED;IAAK,IACtDX,mBAAA,CAAuB,YAAAa,gBAAA,CAAhBH,KAAK,CAACI,EAAE,kBACfd,mBAAA,CAA0B,YAAAa,gBAAA,CAAnBH,KAAK,CAACK,KAAK,kBAClBf,mBAAA,CAA0B,YAAAa,gBAAA,CAAnBH,KAAK,CAACM,KAAK,iB;uDAMxBf,mBAAA,CAAgC,KAAAgB,UAAA,EAA7B,2BAAyB,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}