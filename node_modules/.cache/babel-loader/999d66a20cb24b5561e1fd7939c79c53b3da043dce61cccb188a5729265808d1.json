{"ast":null,"code":"import Fullcalendar from '@fullcalendar/vue3';\nimport DayGridPlugin from '@fullcalendar/daygrid';\nimport TimeGridPlugin from '@fullcalendar/timegrid';\nimport InteractionPlugin from '@fullcalendar/interaction';\nimport ListPlugin from '@fullcalendar/list';\nimport { mapGetters } from 'vuex';\nimport EventModal from './EventModal';\nimport CommentsModal from './CommentsModal';\nexport default {\n  data: () => ({\n    calendarPlugins: [DayGridPlugin, TimeGridPlugin, InteractionPlugin, ListPlugin]\n  }),\n  components: {\n    Fullcalendar\n  },\n  computed: {\n    ...mapGetters([\"EVENTS\"])\n  },\n  methods: {\n    newEvent() {},\n    renderEvent(arg) {\n      let span = document.createElement('span');\n      span.setAttribute('class', 'fa fa-comments');\n      arg.el.appendChild(span);\n      span.addEventListener('click', event => {\n        event.stopPropagation();\n      });\n    },\n    updateEvent(arg) {\n      this.$store.commit(\"UPDATE_EVENT\", arg.event);\n    },\n    handleSelect(arg) {\n      this.$store.commit(\"ADD_EVENT\", {\n        id: new Date().getTime(),\n        title: \"Something\",\n        start: arg.start,\n        end: arg.end,\n        allDay: arg.allDay\n      });\n    },\n    handleEventClick(arg) {\n      console.log(arg);\n    }\n  }\n};","map":{"version":3,"names":["Fullcalendar","DayGridPlugin","TimeGridPlugin","InteractionPlugin","ListPlugin","mapGetters","EventModal","CommentsModal","data","calendarPlugins","components","computed","methods","newEvent","renderEvent","arg","span","document","createElement","setAttribute","el","appendChild","addEventListener","event","stopPropagation","updateEvent","$store","commit","handleSelect","id","Date","getTime","title","start","end","allDay","handleEventClick","console","log"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/components/Calendario.vue"],"sourcesContent":["<template>\n    <div>\n        <button @click=\"newEvent\">New event</button>\n        <Fullcalendar \n            :plugins=\"calendarPlugins\" \n            :header=\"{\n                left: 'title',\n                center: 'dayGridMonth, timeGridWeek, timeGridDay, listWeek',\n                right: 'prev today next'\n            }\"\n            :buttonText=\"{\n                today: 'Aujourd\\'hui',\n                month: 'Mois',\n                week: 'Semaine',\n                day: 'Jour',\n                list: 'Liste'\n            }\"\n            :weekends=\"false\"\n            :selectable=\"true\"\n            :editable=\"true\"\n            :events=\"EVENTS\"\n            @select=\"handleSelect\"\n            @eventClick=\"handleEventClick\"\n            @eventResize=\"updateEvent\"\n            @eventDrop=\"updateEvent\"\n            @eventRender=\"renderEvent\"\n        />\n\n        <modals-container />\n    </div>\n</template>\n\n<script>\n\n\nimport Fullcalendar from '@fullcalendar/vue3'\nimport DayGridPlugin from '@fullcalendar/daygrid'\nimport TimeGridPlugin from '@fullcalendar/timegrid'\nimport InteractionPlugin from '@fullcalendar/interaction'\nimport ListPlugin from '@fullcalendar/list'\n\nimport {mapGetters} from 'vuex'\n\nimport EventModal from './EventModal'\nimport CommentsModal from './CommentsModal'\n\nexport default {\n    data: () => ({\n        calendarPlugins: [\n            DayGridPlugin,\n            TimeGridPlugin,\n            InteractionPlugin,\n            ListPlugin\n        ]\n    }),\n    components: {Fullcalendar},\n    computed: {\n        ...mapGetters([\"EVENTS\"])\n    },\n    methods: {\n        newEvent() {\n            \n            \n        },\n        renderEvent(arg) {\n            let span = document.createElement('span')\n\n            span.setAttribute('class', 'fa fa-comments')\n\n            arg.el.appendChild(span)\n\n            span.addEventListener('click', event => {\n                event.stopPropagation(); \n               \n            })\n        },\n        updateEvent (arg) {\n            this.$store.commit(\"UPDATE_EVENT\", arg.event)\n        },\n        handleSelect(arg) {\n            this.$store.commit(\"ADD_EVENT\", {\n                id: (new Date()).getTime(),\n                title: \"Something\",\n                start: arg.start,\n                end: arg.end,\n                allDay: arg.allDay\n            })\n        },\n        handleEventClick (arg) {\n            console.log(arg)\n        }\n    }\n};\n\n</script>\n\n<style>\n\n</style>"],"mappings":"AAmCA,OAAOA,YAAW,MAAO,oBAAmB;AAC5C,OAAOC,aAAY,MAAO,uBAAsB;AAChD,OAAOC,cAAa,MAAO,wBAAuB;AAClD,OAAOC,iBAAgB,MAAO,2BAA0B;AACxD,OAAOC,UAAS,MAAO,oBAAmB;AAE1C,SAAQC,UAAU,QAAO,MAAK;AAE9B,OAAOC,UAAS,MAAO,cAAa;AACpC,OAAOC,aAAY,MAAO,iBAAgB;AAE1C,eAAe;EACXC,IAAI,EAAEA,CAAA,MAAO;IACTC,eAAe,EAAE,CACbR,aAAa,EACbC,cAAc,EACdC,iBAAiB,EACjBC,UAAS;EAEjB,CAAC,CAAC;EACFM,UAAU,EAAE;IAACV;EAAY,CAAC;EAC1BW,QAAQ,EAAE;IACN,GAAGN,UAAU,CAAC,CAAC,QAAQ,CAAC;EAC5B,CAAC;EACDO,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG,CAGX,CAAC;IACDC,WAAWA,CAACC,GAAG,EAAE;MACb,IAAIC,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,MAAM;MAExCF,IAAI,CAACG,YAAY,CAAC,OAAO,EAAE,gBAAgB;MAE3CJ,GAAG,CAACK,EAAE,CAACC,WAAW,CAACL,IAAI;MAEvBA,IAAI,CAACM,gBAAgB,CAAC,OAAO,EAAEC,KAAI,IAAK;QACpCA,KAAK,CAACC,eAAe,CAAC,CAAC;MAE3B,CAAC;IACL,CAAC;IACDC,WAAUA,CAAGV,GAAG,EAAE;MACd,IAAI,CAACW,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEZ,GAAG,CAACQ,KAAK;IAChD,CAAC;IACDK,YAAYA,CAACb,GAAG,EAAE;MACd,IAAI,CAACW,MAAM,CAACC,MAAM,CAAC,WAAW,EAAE;QAC5BE,EAAE,EAAG,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;QAC1BC,KAAK,EAAE,WAAW;QAClBC,KAAK,EAAElB,GAAG,CAACkB,KAAK;QAChBC,GAAG,EAAEnB,GAAG,CAACmB,GAAG;QACZC,MAAM,EAAEpB,GAAG,CAACoB;MAChB,CAAC;IACL,CAAC;IACDC,gBAAeA,CAAGrB,GAAG,EAAE;MACnBsB,OAAO,CAACC,GAAG,CAACvB,GAAG;IACnB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}