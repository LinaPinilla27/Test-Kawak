{"ast":null,"code":"import axios from \"axios\";\nimport { defineComponent } from \"vue\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { mapGetters, mapActions } from \"vuex\";\nexport default defineComponent({\n  components: {\n    FullCalendar\n  },\n  computed: {\n    ...mapGetters([\"events\"])\n  },\n  data() {\n    return {\n      selectedCountry: \"US\",\n      // o cualquier valor predeterminado que desees\n      countries: [\"US\", \"GB\", \"CA\", \"AU\", \"DE\"],\n      holidays: [],\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n        },\n        initialView: \"dayGridMonth\",\n        events: this.events,\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick\n      }\n    };\n  },\n  methods: {\n    ...mapActions([\"addEvent\", \"removeEvent\", \"updateEvent\"]),\n    handleDateSelect(selectInfo) {\n      const title = prompt(\"Adicionar nota\");\n      if (title) {\n        const event = {\n          id: this.$store.state.eventIdCounter + 1,\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        };\n        this.addEvent(event);\n      }\n    },\n    handleEventClick(clickInfo) {\n      const title = prompt(\"Editar nota\", clickInfo.event.title);\n\n      // Verifica si title no es null antes de continuar\n      if (title !== null) {\n        const updatedEvent = {\n          id: clickInfo.event.id,\n          title,\n          start: clickInfo.event.start.toISOString(),\n          end: clickInfo.event.end ? clickInfo.event.end.toISOString() : null,\n          allDay: clickInfo.event.allDay\n        };\n        this.updateEvent(updatedEvent);\n      }\n    },\n    async fetchHolidays() {\n      try {\n        const response = await axios.get(`https://date.nager.at/api/v3/PublicHolidays/${new Date().getFullYear()}/${this.selectedCountry}`);\n        this.holidays = response.data.map(holiday => ({\n          title: holiday.name,\n          start: holiday.date,\n          allDay: true\n        }));\n      } catch (error) {\n        console.error(\"Error al obtener los días feriados\", error);\n      }\n    }\n  },\n  watch: {\n    events: {\n      handler(events) {\n        this.calendarOptions.events = events;\n      },\n      immediate: true\n    },\n    selectedCountry: \"fetchHolidays\"\n  }\n});","map":{"version":3,"names":["axios","defineComponent","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","mapGetters","mapActions","components","computed","data","selectedCountry","countries","holidays","calendarOptions","plugins","headerToolbar","left","center","right","initialView","events","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","handleEventClick","methods","selectInfo","title","prompt","event","id","$store","state","eventIdCounter","start","startStr","end","endStr","allDay","addEvent","clickInfo","updatedEvent","toISOString","updateEvent","fetchHolidays","response","get","Date","getFullYear","map","holiday","name","date","error","console","watch","handler","immediate"],"sources":["/Users/lina/Documents/vue/Test-Kawak/src/components/Calendario.vue"],"sourcesContent":["<template>\n  <div class=\"demo-app\">\n    <div class=\"demo-app-main\">\n      <label for=\"country\">Selecciona un país:</label>\n      <select v-model=\"selectedCountry\" @change=\"fetchHolidays\">\n        <option v-for=\"country in countries\" :key=\"country\" :value=\"country\">\n          {{ country }}\n        </option>\n      </select>\n    </div>\n    <div class=\"mt-5\">\n      <FullCalendar class=\"demo-app-calendar\" :options=\"calendarOptions\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { defineComponent } from \"vue\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default defineComponent({\n  components: {\n    FullCalendar,\n  },\n  computed: {\n    ...mapGetters([\"events\"]),\n  },\n  data() {\n    return {\n      selectedCountry: \"US\", // o cualquier valor predeterminado que desees\n      countries: [\"US\", \"GB\", \"CA\", \"AU\", \"DE\"],\n      holidays: [],\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        },\n        initialView: \"dayGridMonth\",\n        events: this.events,\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n      },\n    };\n  },\n  methods: {\n    ...mapActions([\"addEvent\", \"removeEvent\", \"updateEvent\"]),\n    handleDateSelect(selectInfo) {\n      const title = prompt(\"Adicionar nota\");\n      if (title) {\n        const event = {\n          id: this.$store.state.eventIdCounter + 1,\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay,\n        };\n        this.addEvent(event);\n      }\n    },\n    handleEventClick(clickInfo) {\n      const title = prompt(\"Editar nota\", clickInfo.event.title);\n\n      // Verifica si title no es null antes de continuar\n      if (title !== null) {\n        const updatedEvent = {\n          id: clickInfo.event.id,\n          title,\n          start: clickInfo.event.start.toISOString(),\n          end: clickInfo.event.end ? clickInfo.event.end.toISOString() : null,\n          allDay: clickInfo.event.allDay,\n        };\n\n        this.updateEvent(updatedEvent);\n      }\n    },\n    async fetchHolidays() {\n      try {\n        const response = await axios.get(\n          `https://date.nager.at/api/v3/PublicHolidays/${new Date().getFullYear()}/${\n            this.selectedCountry\n          }`\n        );\n        this.holidays = response.data.map((holiday) => ({\n          title: holiday.name,\n          start: holiday.date,\n          allDay: true,\n        }));\n      } catch (error) {\n        console.error(\"Error al obtener los días feriados\", error);\n      }\n    },\n  },\n  watch: {\n    events: {\n      handler(events) {\n        this.calendarOptions.events = events;\n      },\n      immediate: true,\n    },\n    selectedCountry: \"fetchHolidays\",\n  },\n});\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}