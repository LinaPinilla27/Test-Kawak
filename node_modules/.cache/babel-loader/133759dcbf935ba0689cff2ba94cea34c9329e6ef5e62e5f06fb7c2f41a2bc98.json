{"ast":null,"code":"import { defineComponent } from \"vue\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\nexport default defineComponent({\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin // needed for dateClick\n        ],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\"\n        },\n        initialView: \"dayGridMonth\",\n        initialEvents: INITIAL_EVENTS,\n        // alternatively, use the `events` setting to fetch from a feed\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n        eventsSet: this.handleEvents\n        /* you can update a remote database when these fire:\n        eventAdd:\n        eventChange:\n        eventRemove:\n        */\n      },\n      currentEvents: []\n    };\n  },\n  methods: {\n    handleWeekendsToggle() {\n      this.calendarOptions.weekends = !this.calendarOptions.weekends; // update a property\n    },\n    handleDateSelect(selectInfo) {\n      let title = prompt(\"Please enter a new title for your event\");\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay\n        });\n      }\n    },\n    handleEventClick(clickInfo) {\n      if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n        clickInfo.event.remove();\n      }\n    },\n    handleEvents(events) {\n      this.currentEvents = events;\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","INITIAL_EVENTS","createEventId","components","data","calendarOptions","plugins","headerToolbar","left","center","right","initialView","initialEvents","editable","selectable","selectMirror","dayMaxEvents","weekends","select","handleDateSelect","eventClick","handleEventClick","eventsSet","handleEvents","currentEvents","methods","handleWeekendsToggle","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","clickInfo","confirm","event","remove","events"],"sources":["/Users/lina/Desktop/vue/notes-calendar/src/components/Calendario.vue"],"sourcesContent":["<script>\nimport { defineComponent } from \"vue\";\nimport FullCalendar from \"@fullcalendar/vue3\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { INITIAL_EVENTS, createEventId } from \"./event-utils\";\n\nexport default defineComponent({\n  components: {\n    FullCalendar,\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [\n          dayGridPlugin,\n          timeGridPlugin,\n          interactionPlugin, // needed for dateClick\n        ],\n        headerToolbar: {\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,timeGridWeek,timeGridDay\",\n        },\n        initialView: \"dayGridMonth\",\n        initialEvents: INITIAL_EVENTS, // alternatively, use the `events` setting to fetch from a feed\n        editable: true,\n        selectable: true,\n        selectMirror: true,\n        dayMaxEvents: true,\n        weekends: true,\n        select: this.handleDateSelect,\n        eventClick: this.handleEventClick,\n        eventsSet: this.handleEvents,\n        /* you can update a remote database when these fire:\n        eventAdd:\n        eventChange:\n        eventRemove:\n        */\n      },\n      currentEvents: [],\n    };\n  },\n  methods: {\n    handleWeekendsToggle() {\n      this.calendarOptions.weekends = !this.calendarOptions.weekends; // update a property\n    },\n    handleDateSelect(selectInfo) {\n      let title = prompt(\"Please enter a new title for your event\");\n      let calendarApi = selectInfo.view.calendar;\n\n      calendarApi.unselect(); // clear date selection\n\n      if (title) {\n        calendarApi.addEvent({\n          id: createEventId(),\n          title,\n          start: selectInfo.startStr,\n          end: selectInfo.endStr,\n          allDay: selectInfo.allDay,\n        });\n      }\n    },\n    handleEventClick(clickInfo) {\n      if (\n        confirm(\n          `Are you sure you want to delete the event '${clickInfo.event.title}'`\n        )\n      ) {\n        clickInfo.event.remove();\n      }\n    },\n    handleEvents(events) {\n      this.currentEvents = events;\n    },\n  },\n});\n</script>\n\n<template>\n  <div class=\"demo-app\">\n    <div class=\"demo-app-main\">\n      <FullCalendar class=\"demo-app-calendar\" :options=\"calendarOptions\">\n        <template v-slot:eventContent=\"arg\">\n          <b>{{ arg.timeText }}</b>\n          <i>{{ arg.event.title }}</i>\n        </template>\n      </FullCalendar>\n    </div>\n  </div>\n</template>\n\n<style lang='css'>\nh2 {\n  margin: 0;\n  font-size: 16px;\n}\n\nul {\n  margin: 0;\n  padding: 0 0 0 1.5em;\n}\n\nli {\n  margin: 1.5em 0;\n  padding: 0;\n}\n\nb {\n  /* used for event dates/times */\n  margin-right: 3px;\n}\n\n.demo-app {\n  display: flex;\n  min-height: 100%;\n  font-family: Arial, Helvetica Neue, Helvetica, sans-serif;\n  font-size: 14px;\n}\n\n.demo-app-sidebar {\n  width: 300px;\n  line-height: 1.5;\n  background: #eaf9ff;\n  border-right: 1px solid #d3e2e8;\n}\n\n.demo-app-sidebar-section {\n  padding: 2em;\n}\n\n.demo-app-main {\n  flex-grow: 1;\n  padding: 3em;\n}\n\n.fc {\n  /* the calendar root */\n  max-width: 1100px;\n  margin: 0 auto;\n}\n</style>"],"mappings":"AACA,SAASA,eAAc,QAAS,KAAK;AACrC,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,uBAAuB;AACjD,OAAOC,cAAa,MAAO,wBAAwB;AACnD,OAAOC,iBAAgB,MAAO,2BAA2B;AACzD,SAASC,cAAc,EAAEC,aAAY,QAAS,eAAe;AAE7D,eAAeN,eAAe,CAAC;EAC7BO,UAAU,EAAE;IACVN;EACF,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QACfC,OAAO,EAAE,CACPR,aAAa,EACbC,cAAc,EACdC,iBAAiB,CAAE;QAAA,CACpB;QACDO,aAAa,EAAE;UACbC,IAAI,EAAE,iBAAiB;UACvBC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE;QACT,CAAC;QACDC,WAAW,EAAE,cAAc;QAC3BC,aAAa,EAAEX,cAAc;QAAE;QAC/BY,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE,IAAI;QAChBC,YAAY,EAAE,IAAI;QAClBC,YAAY,EAAE,IAAI;QAClBC,QAAQ,EAAE,IAAI;QACdC,MAAM,EAAE,IAAI,CAACC,gBAAgB;QAC7BC,UAAU,EAAE,IAAI,CAACC,gBAAgB;QACjCC,SAAS,EAAE,IAAI,CAACC;QAChB;;;;;MAKF,CAAC;MACDC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,oBAAoBA,CAAA,EAAG;MACrB,IAAI,CAACrB,eAAe,CAACY,QAAO,GAAI,CAAC,IAAI,CAACZ,eAAe,CAACY,QAAQ,EAAE;IAClE,CAAC;IACDE,gBAAgBA,CAACQ,UAAU,EAAE;MAC3B,IAAIC,KAAI,GAAIC,MAAM,CAAC,yCAAyC,CAAC;MAC7D,IAAIC,WAAU,GAAIH,UAAU,CAACI,IAAI,CAACC,QAAQ;MAE1CF,WAAW,CAACG,QAAQ,CAAC,CAAC,EAAE;;MAExB,IAAIL,KAAK,EAAE;QACTE,WAAW,CAACI,QAAQ,CAAC;UACnBC,EAAE,EAAEjC,aAAa,CAAC,CAAC;UACnB0B,KAAK;UACLQ,KAAK,EAAET,UAAU,CAACU,QAAQ;UAC1BC,GAAG,EAAEX,UAAU,CAACY,MAAM;UACtBC,MAAM,EAAEb,UAAU,CAACa;QACrB,CAAC,CAAC;MACJ;IACF,CAAC;IACDnB,gBAAgBA,CAACoB,SAAS,EAAE;MAC1B,IACEC,OAAO,CACJ,8CAA6CD,SAAS,CAACE,KAAK,CAACf,KAAM,GACtE,GACA;QACAa,SAAS,CAACE,KAAK,CAACC,MAAM,CAAC,CAAC;MAC1B;IACF,CAAC;IACDrB,YAAYA,CAACsB,MAAM,EAAE;MACnB,IAAI,CAACrB,aAAY,GAAIqB,MAAM;IAC7B;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}